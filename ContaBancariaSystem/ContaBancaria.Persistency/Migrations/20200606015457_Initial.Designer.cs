// <auto-generated />
using ContaBancaria.Persistency;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContaBancaria.Persistency.Migrations
{
    [DbContext(typeof(ContaBancariaDbContext))]
    [Migration("20200606015457_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("ContaBancaria.Core.Agencia", b =>
                {
                    b.Property<int>("AgenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BancoID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EnderecoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AgenciaID");

                    b.HasIndex("BancoID");

                    b.ToTable("Agencias");

                    b.HasData(
                        new
                        {
                            AgenciaID = 1,
                            BancoID = 1,
                            EnderecoID = 3
                        },
                        new
                        {
                            AgenciaID = 2,
                            BancoID = 2,
                            EnderecoID = 4
                        });
                });

            modelBuilder.Entity("ContaBancaria.Core.Banco", b =>
                {
                    b.Property<int>("BancoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("BancoID");

                    b.ToTable("Bancos");

                    b.HasData(
                        new
                        {
                            BancoID = 1,
                            CNPJ = "60.746.948/0001-12",
                            Name = "Bradesco"
                        },
                        new
                        {
                            BancoID = 2,
                            CNPJ = "60.701.190/0001",
                            Name = "Itaú"
                        });
                });

            modelBuilder.Entity("ContaBancaria.Core.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiSecret")
                        .HasColumnType("TEXT");

                    b.Property<int>("CPF")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EnderecoID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientID = 1,
                            ApiKey = "1f06200b-cce4-44c7-9895-e8947a7f8f12",
                            ApiSecret = "5028d6b9-87ff-480a-995f-d6e37a376929",
                            CPF = 123,
                            EnderecoID = 1,
                            Name = "Thais"
                        },
                        new
                        {
                            ClientID = 2,
                            ApiKey = "fcbbeae0-b29e-48dd-ae58-a505170c83c2",
                            ApiSecret = "700b6f0b-3887-4887-aae7-7437700e343f",
                            CPF = 159,
                            EnderecoID = 2,
                            Name = "Nohan"
                        });
                });

            modelBuilder.Entity("ContaBancaria.Core.Conta", b =>
                {
                    b.Property<int>("ContaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgenciaID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CodContaCorrente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Depositos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Saldo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Saques")
                        .HasColumnType("INTEGER");

                    b.HasKey("ContaID");

                    b.HasIndex("AgenciaID");

                    b.HasIndex("ClientID");

                    b.ToTable("Contas");

                    b.HasData(
                        new
                        {
                            ContaID = 1,
                            AgenciaID = 2,
                            ClientID = 1,
                            CodContaCorrente = 0,
                            Depositos = 0,
                            Saldo = 0,
                            Saques = 0
                        },
                        new
                        {
                            ContaID = 2,
                            AgenciaID = 1,
                            ClientID = 2,
                            CodContaCorrente = 0,
                            Depositos = 0,
                            Saldo = 0,
                            Saques = 0
                        });
                });

            modelBuilder.Entity("ContaBancaria.Core.Endereco", b =>
                {
                    b.Property<int>("EnderecoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Logradouro")
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pais")
                        .HasColumnType("TEXT");

                    b.HasKey("EnderecoID");

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            EnderecoID = 1,
                            Bairro = "Sao Joao",
                            Cidade = "Belo Horizonte",
                            Estado = "Minas Gerais",
                            Logradouro = "Rua Amelia",
                            Numero = 126,
                            Pais = "Brasil"
                        },
                        new
                        {
                            EnderecoID = 2,
                            Bairro = "Cuba",
                            Cidade = "São Paulo",
                            Estado = "São Paulo",
                            Logradouro = "Rua Hogwarts",
                            Numero = 12598,
                            Pais = "Brasil"
                        },
                        new
                        {
                            EnderecoID = 3,
                            Bairro = "Tucuruvi",
                            Cidade = "São Paulo",
                            Estado = "São Paulo",
                            Logradouro = "Rua Henrique",
                            Numero = 10,
                            Pais = "Brasil"
                        },
                        new
                        {
                            EnderecoID = 4,
                            Bairro = "Sao Joao",
                            Cidade = "Belo Horizonte",
                            Estado = "Minas Gerais",
                            Logradouro = "Rua Anastacia",
                            Numero = 12598,
                            Pais = "Brasil"
                        });
                });

            modelBuilder.Entity("ContaBancaria.Core.Agencia", b =>
                {
                    b.HasOne("ContaBancaria.Core.Endereco", "Endereco")
                        .WithMany("Agencias")
                        .HasForeignKey("AgenciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContaBancaria.Core.Banco", "Banco")
                        .WithMany("Agencias")
                        .HasForeignKey("BancoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContaBancaria.Core.Client", b =>
                {
                    b.HasOne("ContaBancaria.Core.Endereco", "Endereco")
                        .WithMany("Clients")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContaBancaria.Core.Conta", b =>
                {
                    b.HasOne("ContaBancaria.Core.Agencia", "Agencia")
                        .WithMany("Contas")
                        .HasForeignKey("AgenciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContaBancaria.Core.Client", "Client")
                        .WithMany("Contas")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
